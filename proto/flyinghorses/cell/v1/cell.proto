syntax = "proto3";

package c.cell.v1;

import "flyinghorses/commons/v1/common.proto";

enum CellLabel {
    CELL_LABEL_UNSPECIFIED = 0;
    CELL_LABEL_UNKNOWN = 1;
    CELL_LABEL_LEGITIMATE = 2;
    CELL_LABEL_SMALL_CELL = 3;
    CELL_LABEL_SUSPICIOUS = 4;
    CELL_LABEL_CSS = 5;
}

enum CellSource {
    CELL_SOURCE_UNSPECIFIED = 0;
    CELL_SOURCE_UNKNOWN = 1;
    CELL_SOURCE_WIGGLE = 2;
    CELL_SOURCE_OPENCELLID = 3;
}

message CellLocation {
    // Approximate Latitude obtained via GPSD
    double lat = 1;
    // Approximate Longitude obtained via GPSD
    double lon = 2;
}

message CellMeta {
    string name = 1;
    string description = 2;
    string notes = 3;
    string operator = 4;
}

message Cell {
    // Mobile Country Code
    int64 mcc = 1;
    // Mobile Network Code
    int64 mnc = 2;
    // Tracking Area Code
    int64 tac = 3;
    // Cell ID
    int64 cid = 4;
    // PHY-layer Cell ID
    int64 phyid = 5;
    // E-UTRA Absolute Radio Frequency Channel
    int64 earfcn = 6;
    // Received Signal Strength Indicator
    double rssi = 7;
    // Transmitting Frequency
    double frequency = 8;
    // Enodeb ID
    int64 enodeb_id = 9;
    // Sector ID
    int64 sector_id = 10;
    // Carrier Frequency Offset
    double cfo = 11;
    // Reference Signal Received Quality (N*(RSRP/RSSI))
    double rsrq = 12;
    // Signal Noise Ratio
    double snr = 13;
    // Reference Signal Received Power
    double rsrp = 14;
    // Transmitting Power
    double tx_pwr = 15;
    // Estimated Distance
    double est_dist = 16;
    // Raw Cell Access Related Information
    string raw_sib1 = 17;
    // Timestamp
    int64 timestamp = 18;
    
    // Cell ID
    string id = 19;
    // Cell Created at Datetim
    string created_at = 20;

    // Cell Suspiciousness (0-100)
    int64 suspiciousness = 21;
    // Cell Location
    CellLocation location = 22;
    // Cell Classified Label
    CellLabel classification = 23;
    // Cell Source
    CellSource source = 24;
    // Cell Meta
    CellMeta meta = 25;
}

message CellQueryParams {
    Cell cell = 1;
    int64 limit = 2;
    int64 page = 3;
}
message CellList {
    repeated Cell data = 1;
    flyinghorses.commons.v1.Pagination pagination = 2;
}

service CellService {
    rpc Stream(CellQueryParams) returns (stream Cell) {};
    rpc Create(Cell) returns (flyinghorses.commons.v1.GenericResponse) {};
    rpc Update(Cell) returns (flyinghorses.commons.v1.GenericResponse) {};
    rpc Get(CellQueryParams) returns (Cell) {};
    rpc List(CellQueryParams) returns (CellList) {};
    rpc Delete(Cell) returns (flyinghorses.commons.v1.GenericResponse) {};
}